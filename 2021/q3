#!/usr/bin/env python3

from decimal import Decimal
from sys import stdin, stderr

#######################
# Read phenotype tree #
#######################

ROOT = 1

n = int(stdin.readline())
parent = [None] + list(map(int, stdin.readline().split()))
ic = list(map(int, stdin.readline().split()))

assert(len(parent) == n)
assert(len(ic) == n)
del(n)

print("parent", len(parent) if len(parent) > 100 else parent, file=stderr)
print("ic", len(ic) if len(ic) > 100 else ic, file=stderr)

def rootpath(u):
    ans = []
    while True:
        ans.append(u)
        if u == ROOT:
            break
        u = parent[u - 1]
    return ans

def lca(u, v):
    ans = None
    u_path = rootpath(u)
    v_path = rootpath(v)
    while u_path and v_path:
        if u_path[-1] == v_path[-1]:
            ans = u_path.pop()
            v_path.pop()
        else:
            break
    return ans

#################
# Read diseases #
#################

m = int(stdin.readline())
diseases = []
for _ in range(m):
    cm_i = list(map(int, stdin.readline().split()))
    assert(len(cm_i) - 1 == cm_i[0])
    diseases.append(set(cm_i[1:]))

assert(len(diseases) == m)
del(m)

print("diseases", len(diseases) if len(diseases) > 100 else diseases, file=stderr)

#################
# Read patients #
#################

nq = int(stdin.readline())
patients = []
for _ in range(nq):
    cq_i = list(map(int, stdin.readline().split()))
    assert(len(cq_i) - 1 == cq_i[0])
    patients.append(set(cq_i[1:]))

assert(len(patients) == nq)
del(nq)

print("patients", len(patients) if len(patients) > 100 else patients, file=stderr)

########
# Main #
########

def infocontent(patient, disease):
    return sum(map(lambda q: max(map(lambda d: ic[lca(q, d) - 1], disease)), patient))

for (i, patient) in enumerate(patients, start=1):
    ans = None
    print("patient", i, "/", len(patients), file=stderr)
    for (j, disease) in enumerate(diseases, start=1):
        ic_j = infocontent(patient, disease)
        if ans == None or ic_j > ans[0]:
            ans = (ic_j, j)
    print(ans[1])
